#Задания по ЕГЕ номер 17 алгоритмизация.
# Номер 1
'''
В файле содержится последовательность целых чисел.
Элементы последовательности могут принимать целые значения от −10 000 до 10 000 включительно.
Определите и запишите в ответе сначала количество пар элементов последовательности, в которых хотя бы одно число делится на 3,
затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
Например, для последовательности из пяти элементов: 6; 2; 9; –3; 6  — ответ: 4 11.
'''
'''
array = []

file = open("17.txt.txt", encoding='utf-8')
#тут получается нужно осторожно это решать потому что интерпритатор видит символы в виде строк,
#а не чисел, поэтому в скобачках лучше пояснять тип данных.

for ii in file:
    array.append(int(ii))

counter = 0
specialNumbers = []
for ii in range(len(array) - 1):
    if abs(array[ii]) % 3 == 0 or abs(array[ii+1]) % 3 == 0:
        counter += 1
        specialNumbers.append(array[ii] + array[ii+1])

#Проверка на количество элементов и при помощи длинны нового массива:
longSpecial = len(specialNumbers)
print(f"Количество элементов по счетчику: {counter}, и количество элементов по длинне массива: {longSpecial}")

maxDigit = max(specialNumbers)
print(f"Максимальнная сумма элементов таких пар: {maxDigit}")
'''

# Номер 2
'''
В файле содержится последовательность из 10 000 натуральных чисел.
Каждое число не превышает 10 000.
Определите и запишите в ответе сначала количество пар элементов последовательности
у которых различные остатки от деления на d  =  160 и хотя бы одно из чисел делится на p  =  7,
затем максимальную из сумм элементов таких пар.
В данной задаче под парой подразумевается два различных элемента последовательности.
Порядок элементов в паре не важен.
'''

array = []

file = open("17.txt", encoding='utf-8')

for ii in file:
    array.append(int(ii))

long = len(array)
counter = 0
specialNumbers = []
for ii in range(long - 1):
    for jj in range(ii + 1 ,long):
        if (array[ii] % 7 == 0 or array[jj] % 7 == 0) and ((array[ii] % 160) != (array[jj] % 160)):
            counter += 1
            specialNumbers.append(array[ii] + array[jj])

#Проверка на количество элементов и при помощи длинны нового массива:
longSpecial = len(specialNumbers)
print(f"Количество элементов по счетчику: {counter}, и количество элементов по длинне массива: {longSpecial}")

maxDigit = max(specialNumbers)
print(f"Максимальнная сумма элементов таких пар: {maxDigit}")












