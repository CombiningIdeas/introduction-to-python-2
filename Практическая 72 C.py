import math
def f(x):
    return -18 * math.sin(x) + 25 * math.cos(x) - x ** 3 - 2 * x ** 2 + 6 * x + 5

def Steps(a, b, eps):
    x = a
    delta = 2 * eps
    while f(x) * f(x+delta) > 0 and x < b:
        x += delta
        #print(f(x), f(x+delta), x, x+delta)
    f1, f2 = f(x), f(x+delta)
    if f1 * f2 < 0:
        x += eps
    elif f2 == 0:
        x += delta
    return x

a, b, eps, step = -5, 5, 0.001, 0.5
x = a
while x < b:
    x = Steps(x, b, step) - step / 2
    if f(x)*f(x+step) <= 0:
        print("Интервал [%2.1f; %2.1f]\n  Решение: %6.3f" %(x, x + step, Steps(x, b, eps)))
    x += step

'''
Добрый день! Сегодня в электронных таблицах изучаем опцию "Подбор параметра". Вещь полезная. Для участников команды Ларикова тоже нужно хотя бы почитать.
Прикрепляю пример решения предыдущих практических с автоматическим выделением участков и поиском корней. В файле используется метод перебора, но, думаю,
не составит труда заменить середину на метод деления отрезка пополам при необходимости.
Основное в файле - это использование функции в разным шагом: 0.5 - для выделения отрезков, 0.001 - для уточнения корней.
'''
