'''
Практическая работа № 49.	
Логические функции
'''

#Уровень A. Напишите логическую функцию, которая определяет, является ли переданное ей	число совершенным,
#то есть, равно ли оно сумме своих делителей, меньших его самого.
'''
number = int(input("Введите натуральное число: "))

def isIdeal(number):
    summ = 1
    k = 2
    while k ** 2 <= number:
        if number % k == 0:
            summ = summ + k + number // k
        k += 1
    return summ == number
    
a = isIdeal(number)

if a == True:
    print(f"Число {number} совершенное.")
elif a == False:
    print(f"Число {number} не совершенное.")
'''    
#Уровень B. Напишите логическую функцию, которая определяет, являются ли два переданные ей числа взаимно простыми,
#то есть, не имеющими общих делителей, кроме 1.
'''
print("Введите два натуральных числа: ")
digitA, digitB = map(int, input().split())
#Как я понял обычный алгоритм евклида тут ен подойдет, потому что тут считается вычитанием,
#а нам нужно делением, чтобы понять есть ли у них общий делитель. Поэтому оучше модифицированный алгоритм евклида.

#def isRelativePrimes(num1, num2):
#
#    while num1 != num2:
#        if num1 > num2:
#            num1 = num1 - num2
#        else:
#            num2 = num2 - num1
#
#    return num1 + num2 == 1


def isRelativePrimes(num1, num2):

    while num1 != 0 and num2 != 0:
        if num1 > num2:
            num1 = num1 % num2
        else:
            num2 = num2 % num1

    return num1 + num2 == True

a = isRelativePrimes(digitA, digitB)

if a == True:
    print(f"Числа {digitA} и {digitB} взаимно простые.")
elif a == False:
    print(f"Числа {digitA} и {digitB} не взаимно простые.")
'''

#Уровень C. Простое число называется гиперпростым, если любое число, получающееся из него откидыванием нескольких последних цифр,
#тоже является простым. Например, число 733 – гиперпростое, так как и оно само, и числа 73 и 7 – простые.
#Напишите логическую функцию, которая определяет,
#верно ли, что переданное ей число – гиперпростое. Используйте уже готовую функцию isPrime, которая приведена в учебнике.

#Функция определяет, является ли переданное ей число гиперпростым
#(просто число называется гиперпростым, если любое число, получающее из него
#откидыванием нескольких цифр, тоже является простым)

def isPrime(n):
    k = 2
    while k * k <= n and n % k != 0:
        k += 1
    return k * k > n

def isGiperPrime(n):
    while isPrime(n) and n > 0:
        n = n // 10
    return n <= 0    

print("Введите натуральное число: ")
a = int(input())
print("Число %d %sгиперпростое." % (a, int(not isGiperPrime(a)) * "не "))
